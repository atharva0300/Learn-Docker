# This file is for SHARED configuration ( DEVELOPMENT AND PRODUCTION )
# This configuration will be applied to both the DEVELOPMENT 
# and the PRODUCTION

version: "3"
# version of docker compose to use

services: 
# specifying all of the containers to create 
# containers are called services here
  
  # provding the first container ( note the indentation )
  node-app: 
  # providing the configuration of the node-app container
    # providing the build command to build the container  
    build: .
    # the dot(.) is the path to the Dockerfile
    ports: 
      - "3000:3000"
    # providing list of ports fr the container

    # the volumes will only be used in development and not in production
    #volumes:
      # passing volumes for the container 
    #  - ./:/app
      # the ./ -> is the location of the folder on the local system
      # the /app -> is the location of the docker app 
    environment: 
      # providing environmetn variables 
      - PORT=3000
    
    #env_file: 
    #  - ./.env
      # or you can import from the local environment variables file 
      # for the docker container
    
    # we are specifying on which container our node-app is dependent on 
    # our node-app is dependent on mongo-app container
    # so, docker will spin up the mongo-app container before sipping the node-app container
    depends_on:
      - mongo-app

  # Creating a mongo container
  mongo-app:
  # providing the configuration of the mongo-app 
  # Refer : https://hub.docker.com/_/mongo
    image : mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=atharva
      - MONGO_INITDB_ROOT_PASSWORD=mypassword
    volumes:
    # Here, we are creating a "named" volume
      # - /data/db    -> This is an "anonymous" volume
      - mongo-db:/data/app    # this is a "named" volume
      # we have to declare the "mongo-db" named volume in another portion of the 
      # files so that no 2 volumes with the same name exists

volumes:
  mongo-db: